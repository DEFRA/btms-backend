//------------------------------------------------------------------------------
// <auto-generated>
    //     This code was generated from a template.
    //
    //     Manual changes to this file may cause unexpected behavior in your application.
    //     Manual changes to this file will be overwritten if the code is regenerated.
    // </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Btms.Types.Ipaffs.Mapping;

public static class DecisionDecisionEnumMapper
{
public static Btms.Model.Ipaffs.DecisionDecisionEnum? Map(Btms.Types.Ipaffs.DecisionDecisionEnum? from)
{
if(from == null)
{
return default!;
}
return from switch
{
Btms.Types.Ipaffs.DecisionDecisionEnum.NonAcceptable => Btms.Model.Ipaffs.DecisionDecisionEnum.NonAcceptable,
    Btms.Types.Ipaffs.DecisionDecisionEnum.AcceptableForInternalMarket => Btms.Model.Ipaffs.DecisionDecisionEnum.AcceptableForInternalMarket,
    Btms.Types.Ipaffs.DecisionDecisionEnum.AcceptableIfChanneled => Btms.Model.Ipaffs.DecisionDecisionEnum.AcceptableIfChanneled,
    Btms.Types.Ipaffs.DecisionDecisionEnum.AcceptableForTranshipment => Btms.Model.Ipaffs.DecisionDecisionEnum.AcceptableForTranshipment,
    Btms.Types.Ipaffs.DecisionDecisionEnum.AcceptableForTransit => Btms.Model.Ipaffs.DecisionDecisionEnum.AcceptableForTransit,
    Btms.Types.Ipaffs.DecisionDecisionEnum.AcceptableForTemporaryImport => Btms.Model.Ipaffs.DecisionDecisionEnum.AcceptableForTemporaryImport,
    Btms.Types.Ipaffs.DecisionDecisionEnum.AcceptableForSpecificWarehouse => Btms.Model.Ipaffs.DecisionDecisionEnum.AcceptableForSpecificWarehouse,
    Btms.Types.Ipaffs.DecisionDecisionEnum.AcceptableForPrivateImport => Btms.Model.Ipaffs.DecisionDecisionEnum.AcceptableForPrivateImport,
    Btms.Types.Ipaffs.DecisionDecisionEnum.AcceptableForTransfer => Btms.Model.Ipaffs.DecisionDecisionEnum.AcceptableForTransfer,
    Btms.Types.Ipaffs.DecisionDecisionEnum.HorseReEntry => Btms.Model.Ipaffs.DecisionDecisionEnum.HorseReEntry,

    _ => throw new ArgumentOutOfRangeException(nameof(from), from, null)
};
}
        

}


