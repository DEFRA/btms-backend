//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable

using JsonApiDotNetCore.Resources.Annotations;
using System.Text.Json.Serialization;
using System.Dynamic;


namespace Btms.Model.Cds;

public partial class DecisionCheck
{

    [Attr]
    [JsonPropertyName("checkCode")]
    public required string CheckCode { get; set; }

    [Attr]
    [JsonPropertyName("departmentCode")]
    public string? DepartmentCode { get; set; }

    [Attr]
    [JsonPropertyName("decisionCode")]
    public required string DecisionCode { get; set; }

    [Attr]
    [JsonPropertyName("decisionsValidUntil")]
    public DateTime? DecisionsValidUntil { get; set; }

    [Attr]
    [JsonPropertyName("decisionReasons")]
    public string[]? DecisionReasons { get; set; }

    [Attr]
    [JsonPropertyName("decisionInternalFurtherDetail")]
    public string[]? DecisionInternalFurtherDetail { get; set; }
}

/// <summary>
/// 
/// </summary>
public partial class DecisionItems  //
{
    /// <summary>
    /// 
    /// </summary>
    [Attr]
    [System.ComponentModel.Description("")]
    public int ItemNumber { get; set; }

    /// <summary>
    /// 
    /// </summary>
    [Attr]
    [System.ComponentModel.Description("")]
    public required DecisionCheck[] Checks { get; set; }

    // public void MergeChecks(DecisionItems decisionItems)
    // {
    //     var checks = Checks?.ToList();
    //     if (checks == null)
    //     {
    //         checks = new List<DecisionCheck>();
    //     }
    //
    //     foreach (var decisionItemsCheck in decisionItems.Checks!)
    //     {
    //         var existing = checks.Find(x => x.CheckCode == decisionItemsCheck.CheckCode);
    //         if (existing != null)
    //         {
    //             existing.DecisionCode = decisionItemsCheck.DecisionCode;
    //             existing.DecisionReasons = decisionItemsCheck.DecisionReasons;
    //             existing.DecisionsValidUntil = decisionItemsCheck.DecisionsValidUntil;
    //             existing.DepartmentCode = decisionItemsCheck.DepartmentCode;
    //         }
    //         else
    //         {
    //             checks.Add(decisionItemsCheck);
    //         }
    //     }
    //
    //     Checks = checks.ToArray();
    // }

}